{"version":3,"sources":["components/Button.js","components/AddForms.js","routes/Admin.js"],"names":["Button","children","defaultBtnColor","className","defaultProps","AddForms","state","getRole","ad","toArray","str","split","addUser","e","preventDefault","ConfirmPassword","password","admin","UserName","email","company","context","user","name","uk","sessionStorage","getItem","fetch","method","headers","body","JSON","stringify","then","response","status","alert","setState","catch","err","console","log","error","addSpace","RoomName","location","feature","capacity","features","unshift","uploadSpaceImg","image","target","files","formData","FormData","append","json","inputChange","value","id","onSubmit","this","htmlFor","type","onChange","required","RoomImg","accept","Component","contextType","AuthContext","Admin"],"mappings":"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","file":"static/js/7.9684b405.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nfunction Button({children, defaultBtnColor}) {\r\n    return <button className={defaultBtnColor}>\r\n        {children}\r\n    </button>\r\n}\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.string.isRequired\r\n};\r\n\r\nButton.defaultProps = {\r\n    defaultBtnColor: \"defaultBtn\",\r\n}\r\n\r\n\r\nexport default Button","import React, { Component } from \"react\";\r\nimport Button from \"./Button\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\n// function SignUp()\\\r\nclass AddForms extends Component {\r\n  static contextType = AuthContext;\r\n  state = {};\r\n\r\n  getRole = ad => {\r\n    if (ad === \"Admin\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  toArray = str => {\r\n    return str.split(\",\");\r\n  };\r\n\r\n  addUser = e => {\r\n    e.preventDefault();\r\n    if (this.state.ConfirmPassword === this.state.password) {\r\n      try {\r\n        var { admin, UserName, email, password } = this.state;\r\n        var company = this.context.user.company;\r\n        admin = this.getRole(admin);\r\n        var name = UserName;\r\n        var uk = sessionStorage.getItem(\"mx\");\r\n\r\n        fetch(`/api/users/adminAdd/${uk}`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ company, name, email, password, admin })\r\n        })\r\n          .then(response => {\r\n            if (response.status === 201) {\r\n              alert(\"Member added Successfully.\");\r\n              this.setState({});\r\n            } else if (response.status === 403) {\r\n              alert(\"An account already exists with this email address.\");\r\n              this.setState({});\r\n            } else if (response.status === 401) {\r\n              alert(\"You do not have the required permission.\");\r\n              this.setState({});\r\n            } else {\r\n              alert(\"network error, please try again in a bit\");\r\n            }\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      } catch (error) {\r\n        alert(\"Operation failed. Please try again\");\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      alert(\"Confirm does not match Password\");\r\n    }\r\n  };\r\n\r\n  addSpace = e => {\r\n    e.preventDefault();\r\n    try {\r\n      var { RoomName, location, feature, capacity } = this.state;\r\n      var name = RoomName;\r\n      capacity = `${capacity} seater`;\r\n      var features = this.toArray(feature);\r\n      features.unshift(capacity);\r\n      var company = this.context.user.company;\r\n      fetch(\"/api/venue/\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ company, name, features, location })\r\n      })\r\n        .then(response => {\r\n          if (response.status === 201) {\r\n            alert(\"Space added Successfully.\");\r\n            this.setState({});\r\n          } else if (response.status === 400) {\r\n            alert(\"Error adding space.\");\r\n            this.setState({});\r\n          } else {\r\n            alert(\"network error, please try again in a bit\");\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } catch (error) {\r\n      alert(\"Operation failed. Please try again\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  uploadSpaceImg = e => {\r\n    e.preventDefault();\r\n    var image = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", image);\r\n    try {\r\n      fetch(\"/api/venue/upload/\", {\r\n        method: \"POST\",\r\n        body: formData\r\n      }).then(response => {\r\n        if (response.status !== 200) {\r\n          console.log(response.json());\r\n        }\r\n      });\r\n    } catch (error) {\r\n      alert(\"Error! please try again\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  inputChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\"signUp-section\" id=\"sign-up\">\r\n          <div className=\"col-md-5\">\r\n            <div>\r\n              {\" \"}\r\n              <p className=\"signUp-heading lead\">Add Member</p>\r\n            </div>\r\n\r\n            <form onSubmit={this.addUser}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"InputFullName\">Full Name</label>\r\n                <input\r\n                  value={this.state.UserName}\r\n                  name=\"UserName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"InputFullName\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"InputEmail\">Email</label>\r\n                <input\r\n                  value={this.state.email}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"InputEmail\"\r\n                  name=\"email\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"Role\">Role</label>\r\n                <select\r\n                  value={this.state.admin}\r\n                  className=\"form-control\"\r\n                  id=\"Role\"\r\n                  name=\"admin\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                >\r\n                  <option>Admin</option>\r\n                  <option>Member</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"signInPassword\">Password</label>\r\n                <input\r\n                  value={this.state.password}\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"signUpPassword\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n                <small>password cannot be changed later</small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"ConfirmPassword\">Confirm Password</label>\r\n                <input\r\n                  value={this.state.ConfirmPassword}\r\n                  name=\"ConfirmPassword\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"ConfirmPassword\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <Button type=\"submit\">Add</Button>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 form-split\"></div>\r\n\r\n          <div className=\"col-md-5\">\r\n            <div>\r\n              {\" \"}\r\n              <p className=\"signUp-heading lead\">Add Space</p>\r\n            </div>\r\n\r\n            <form onSubmit={this.addSpace}>\r\n              <div className=\"form-group \">\r\n                <label htmlFor=\"RoomImg\">Image</label>\r\n                <input\r\n                  value={this.state.RoomImg}\r\n                  name=\"RoomImg\"\r\n                  type=\"file\"\r\n                  className=\"form-control\"\r\n                  id=\"RoomImg\"\r\n                  accept=\"image/*\"\r\n                  onChange={this.uploadSpaceImg}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"RoomName\">Name/Tag</label>\r\n                <input\r\n                  value={this.state.RoomName}\r\n                  name=\"RoomName\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"RoomName\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n                <small>\r\n                  Easily identifiable name/tag by members of your organization\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"RoomLocation\">Location</label>\r\n                <input\r\n                  value={this.state.location}\r\n                  name=\"location\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"RoomLocation\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"RoomCapacity\">Capacity</label>\r\n                <input\r\n                  value={this.state.capacity}\r\n                  name=\"capacity\"\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  id=\"RoomCapacity\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n                <small>Number of people the space can sit</small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"RoomFeatures\">Features/Facilities</label>\r\n                <input\r\n                  value={this.state.feature}\r\n                  name=\"feature\"\r\n                  type=\"textarea\"\r\n                  className=\"form-control\"\r\n                  id=\"RoomFeatures\"\r\n                  onChange={this.inputChange}\r\n                  required\r\n                />\r\n                <small>\r\n                  comma separated list of available features/facilities\r\n                </small>\r\n              </div>\r\n              <Button type=\"submit\">Add</Button>\r\n            </form>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddForms;\r\n","import React from \"react\";\r\nimport AddForms from \"../components/AddForms\";\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <section className=\"pt-5 pb-5\">\r\n        <div>\r\n          {\" \"}\r\n          <h3 className=\"mt-5 text-primary text-center\">Administration</h3>\r\n        </div>\r\n        <AddForms />\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n"],"sourceRoot":""}